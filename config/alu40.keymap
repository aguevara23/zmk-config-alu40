/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC/~ |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | TAB   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |RET/SFT|
            // | PLAY  | LCTL | LALT | LGUI | LOWR |     SPACE    |  RAIS | LARW | UARW | DARW  |  RARW |

            bindings = <
&kp Q               &kp W           &kp F        &kp P             &kp B       &trans  &trans  &kp J      &kp L              &kp U                &kp Y            &kp SQT
&mt LEFT_COMMAND A  &mt LEFT_ALT R  &mt LCTRL S  &mt LEFT_SHIFT T  &kp G       &trans  &trans  &kp M      &mt RIGHT_SHIFT N  &mt RIGHT_CONTROL E  &mt RIGHT_ALT I  &mt RIGHT_COMMAND O
&kp Z               &kp X           &kp C        &kp D             &kp V       &trans  &trans  &kp K      &kp H              &kp COMMA            &kp PERIOD       &kp SLASH
&trans              &trans          &lt 1 TAB    &lt 2 BACKSPACE   &kp ESCAPE  &mo 8   &mo 7   &lt 4 RET  &lt 5 SPACE        &lt 6 DEL            &trans           &trans
            >;
        };

        media {
            bindings = <
&trans            &trans        &kp C_BRI_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans  &trans      &trans            &trans             &trans           &trans
&kp LEFT_COMMAND  &kp LEFT_ALT  &kp LCTRL      &kp LEFT_SHIFT        &trans  &trans  &trans  &trans      &kp C_PREV        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT
&trans            &trans        &trans         &trans                &trans  &trans  &trans  &trans      &trans            &trans             &trans           &trans
&trans            &trans        &trans         &trans                &trans  &trans  &trans  &kp C_STOP  &kp K_PLAY_PAUSE  &kp K_MUTE         &trans           &trans
            >;
        };

        nav {
            bindings = <
&kp LG(GRAVE)         &kp LG(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))  &kp LG(TAB)            &trans  &trans  &trans  &trans      &kp K_UNDO     &kp K_CUT      &kp K_COPY   &kp K_PASTE
&kp LEFT_COMMAND      &kp LEFT_ALT              &kp LEFT_CONTROL           &kp LEFT_SHIFT         &trans  &trans  &trans  &kp CAPS    &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT
&kp LG(LEFT_BRACKET)  &trans                    &trans                     &kp LG(RIGHT_BRACKET)  &trans  &trans  &trans  &kp INSERT  &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP  &kp END
&trans                &trans                    &trans                     &trans                 &trans  &trans  &trans  &kp ENTER   &kp BACKSPACE  &kp DEL        &trans       &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        sym {
            bindings = <
&kp LEFT_BRACE  &kp AMPERSAND  &kp STAR     &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE  &trans  &trans  &trans  &trans           &trans             &trans         &trans
&kp COLON       &kp DOLLAR     &kp PERCENT  &kp CARET              &kp PLUS         &trans  &trans  &trans  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_COMMAND
&kp TILDE       &kp EXCL       &kp AT       &kp HASH               &kp PIPE         &trans  &trans  &trans  &trans           &trans             &trans         &trans
&trans          &trans         &trans       &kp RIGHT_PARENTHESIS  &kp UNDER        &trans  &trans  &trans  &trans           &trans             &trans         &trans
            >;
        };

        num {
            bindings = <
&kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET  &trans  &trans  &trans  &trans           &trans             &trans         &trans
&kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL          &trans  &trans  &trans  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_COMMAND
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH      &trans  &trans  &trans  &trans           &trans             &trans         &trans
&trans            &trans        &kp DOT       &kp NUMBER_0  &kp MINUS          &trans  &trans  &trans  &trans           &trans             &trans         &trans
            >;
        };

        func {
            bindings = <
&kp F13  &kp F7  &kp F8  &kp F8  &trans  &trans  &trans  &trans  &trans           &trans             &trans         &trans
&kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans  &trans  &trans  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_COMMAND
&kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans  &trans  &trans  &trans           &trans             &trans         &trans
&trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans           &trans             &trans         &trans
            >;
        };

        lower {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &mo 7   &mo 8   &trans  &trans  &trans  &trans  &trans
            >;
        };

        raise {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &mo 7   &mo 8   &trans  &trans  &trans  &trans  &trans
            >;
        };

        control {
            bindings = <
&trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans       &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&bootloader  &trans        &trans        &trans        &trans        &mo 7         &mo 8   &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        control_activated {
            if-layers = <7 8>;
            then-layer = <9>;
        };
    };
};
